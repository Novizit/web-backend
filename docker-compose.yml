version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: real-estate-db
    environment:
      POSTGRES_DB: real_estate_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - real-estate-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real-estate-backend
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/real_estate_db
      NODE_ENV: production
      PORT: 3001
      CORS_ORIGIN: http://localhost:3000
      AZURE_STORAGE_ACCOUNT: ${AZURE_STORAGE_ACCOUNT}
      AZURE_STORAGE_ACCESS_KEY: ${AZURE_STORAGE_ACCESS_KEY}
      AZURE_BLOB_CONTAINER: ${AZURE_BLOB_CONTAINER:-property-images}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - real-estate-network
    restart: unless-stopped
    command: sh -c "npx prisma migrate deploy && npm start"

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: real-estate-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - real-estate-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  real-estate-network:
    driver: bridge 